$date
	Sun Apr 13 15:42:05 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module control_unit_tb $end
$var wire 1 ! reg_write $end
$var wire 1 " mem_write $end
$var wire 1 # mem_to_reg $end
$var wire 1 $ mem_read $end
$var wire 1 % jump $end
$var wire 1 & branch $end
$var wire 1 ' alu_src $end
$var wire 2 ( alu_op [1:0] $end
$var reg 3 ) funct3 [2:0] $end
$var reg 7 * funct7 [6:0] $end
$var reg 7 + opcode [6:0] $end
$scope module ctrl_inst $end
$var wire 3 , funct3 [2:0] $end
$var wire 7 - funct7 [6:0] $end
$var wire 7 . opcode [6:0] $end
$var parameter 2 / ALU_OP_BRANCH $end
$var parameter 2 0 ALU_OP_I_TYPE $end
$var parameter 2 1 ALU_OP_OTHER $end
$var parameter 2 2 ALU_OP_R_TYPE $end
$var parameter 7 3 OP_BRANCH $end
$var parameter 7 4 OP_I_TYPE $end
$var parameter 7 5 OP_JAL $end
$var parameter 7 6 OP_JALR $end
$var parameter 7 7 OP_LOAD $end
$var parameter 7 8 OP_R_TYPE $end
$var parameter 7 9 OP_STORE $end
$var reg 2 : alu_op [1:0] $end
$var reg 1 ' alu_src $end
$var reg 1 & branch $end
$var reg 1 % jump $end
$var reg 1 $ mem_read $end
$var reg 1 # mem_to_reg $end
$var reg 1 " mem_write $end
$var reg 1 ! reg_write $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100011 9
b110011 8
b11 7
b1100111 6
b1101111 5
b10011 4
b1100011 3
b10 2
b0 1
b11 0
b1 /
$end
#0
$dumpvars
b10 :
b110011 .
b0 -
b0 ,
b110011 +
b0 *
b0 )
b10 (
0'
0&
0%
0$
0#
0"
1!
$end
#10
1'
b11 (
b11 :
1!
b10011 +
b10011 .
#20
1#
1$
b0 (
b0 :
1'
1!
b10 )
b10 ,
b11 +
b11 .
#30
1"
0#
0$
1'
0!
b100011 +
b100011 .
#40
1&
b1 (
b1 :
0"
0'
b0 )
b0 ,
b1100011 +
b1100011 .
#50
1%
1!
0&
b0 (
b0 :
b1101111 +
b1101111 .
#60
1'
1%
1!
b1100111 +
b1100111 .
#70
0%
0'
0!
b1111111 +
b1111111 .
#80
